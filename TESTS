# -*- mode: org; -*-

#+STARTUP: indent

* Album to List<Track>: Album has a list of Tracks.

#+begin_src graphql :url http://localhost:8082/graphql
  query {
    Album (input: { limit 1 }) {
      AlbumId
      ArtistId
      Title
      Tracks (input: { limit 1 }) {
        TrackId
        AlbumId
        Bytes
        Composer
        GenreId
        MediaTypeId
        Milliseconds
        Name
        UnitPrice
      }
    }
  }
#+end_src

* Artist to List<Album>: Artist has a list of Albums.

#+begin_src graphql :url http://localhost:8082/graphql
  query {
    Artist (input: { limit 1 }) {
      ArtistId
      Name
      Albums (input: { limit 1 }) {
        AlbumId
        ArtistId
        Title
      }
    }
  }
#+end_src

* Customer to Employee: Customer has an Employee (i.e. "Customer has this SupportRep Employee")

#+begin_src graphql :url http://localhost:8082/graphql
  query {
    Customer (input: { limit 1 }) {
      Address
      City
      Company
      Country
      CustomerId
      Email
      Fax
      FirstName
      LastName
      Phone
      PostalCode
      State
      SupportRepId
      SupportRep {
        Address
        BirthDate
        City
        Country
        Email
        EmployeeId
        Fax
        FirstName
        HireDate
        LastName
        Phone
        PostalCode
        ReportsTo
        State
        Title
      }
    }
  }
#+end_src

* Customer to List<Invoice>: Customer has a list of Invoices.

#+begin_src graphql :url http://localhost:8082/graphql
  query {
    Customer (input: { limit 1 }) {
      Address
      City
      Company
      Country
      CustomerId
      Email
      Fax
      FirstName
      LastName
      Phone
      PostalCode
      State
      SupportRepId
      Invoices (input: { limit 1 }) {
        BillingAddress
        BillingCity
        BillingCountry
        BillingPostalCode
        BillingState
        CustomerId
        InvoiceDate
        InvoiceId
        Total
      }
    }
  }
#+end_src

* Employee to Employee: Employee may have a single Employee (i.e., "Employee who is his or her manager")

#+begin_src graphql :url http://localhost:8082/graphql
  query {
    Employee (input: { limit 1 }) {
      Address
      BirthDate
      City
      Country
      Email
      EmployeeId
      Fax
      FirstName
      HireDate
      LastName
      Phone
      PostalCode
      ReportsTo
      State
      Manager {
        Address
        BirthDate
        City
        Country
        Email
        EmployeeId
        Fax
        FirstName
        HireDate
        LastName
        Phone
        PostalCode
        ReportsTo
        State
      }
    }
  }
#+end_src

* Employee to List<Customer>: Employee has a list of Customers.

#+begin_src graphql :url http://localhost:8082/graphql
  query {
    Employee (input: { limit 1 }) {
      Address
      BirthDate
      City
      Country
      Email
      EmployeeId
      Fax
      FirstName
      HireDate
      LastName
      Phone
      PostalCode
      ReportsTo
      State
      Customers (input: { limit 1 }) {
        Address
        City
        Company
        Country
        CustomerId
        Email
        Fax
        FirstName
        LastName
        Phone
        PostalCode
        State
        SupportRepId
      }
    }
  }
#+end_src

* Employee to List<Employee>: Employee has a list of Employees (i.e., "Employees he or she manages")

#+begin_src graphql :url http://localhost:8082/graphql
query {
  Employee (input: { limit 1 }) {
    Address
    BirthDate
    City
    Country
    Email
    EmployeeId
    Fax
    FirstName
    HireDate
    LastName
    Phone
    PostalCode
    ReportsTo
    State
    Reports {
      Address
      BirthDate
      City
      Country
      Email
      EmployeeId
      Fax
      FirstName
      HireDate
      LastName
      Phone
      PostalCode
      ReportsTo
      State
    }
  }
}
#+end_src

* Genre to List<Track>: Genre has a list of Tracks (i.e. "Tracks belonging to this Genre")

#+begin_src graphql :url http://localhost:8082/graphql
  query {
    Genre (input: { limit 1 }) {
      GenreId
      Name
      Tracks (input: { limit 1 }) {
        AlbumId
        Bytes
        Composer
        GenreId
        MediaTypeId
        Name
        Milliseconds
        TrackId
        UnitPrice
      }
    }
  }
#+end_src

* Invoice to Customer: Invoice has a Customer (i.e. "Invoice representing a purchase by a Customer")

#+begin_src graphql :url http://localhost:8082/graphql
  query {
    Invoice (input: { limit 1 }) {
      BillingAddress
      BillingCity
      BillingCountry
      BillingPostalCode
      BillingState
      CustomerId
      InvoiceDate
      InvoiceId
      Total
      Customer {
        Address
        City
        Country
        CustomerId
        Email
        Fax
        FirstName
        LastName
        Phone
        PostalCode
        State
        SupportRepId
      }
    }
  }
#+end_src

* Invoice to List<InvoiceLine>: Invoice has a list of InvoiceLines.

#+begin_src graphql :url http://localhost:8082/graphql
  query {
    Invoice (input: { limit 1 }) {
      BillingAddress
      BillingCity
      BillingCountry
      BillingPostalCode
      BillingState
      CustomerId
      InvoiceDate
      InvoiceId
      Total
      InvoiceLines (input: { limit 1 }) {
        InvoiceId
        InvoiceLineId
        Quantity
        TrackId
        UnitPrice
      }
    }
  }
#+end_src

* InvoiceLine to Invoice: InvoiceLine has an Invoice (i.e. "InvoiceLine belongs to an Invoice")

#+begin_src graphql :url http://localhost:8082/graphql
  query {
    InvoiceLine (input: { limit 1 }) {
      InvoiceId
      InvoiceLineId
      Quantity
      TrackId
      UnitPrice
      Invoice {
        BillingAddress
        BillingCity
        BillingCountry
        BillingPostalCode
        BillingState
        CustomerId
        InvoiceDate
        InvoiceId
        Total
      }
    }
  }
#+end_src

* InvoiceLine to Track: InvoiceLine has a Track (i.e. "InvoiceLine purchaes a particular Track")

#+begin_src graphql :url http://localhost:8082/graphql
  query {
    InvoiceLine (input: { limit 1 }) {
      InvoiceId
      InvoiceLineId
      Quantity
      TrackId
      UnitPrice
      Track {
        AlbumId
        Bytes
        Composer
        GenreId
        MediaTypeId
        Milliseconds
        Name
        TrackId
        UnitPrice
      }
    }
  }
#+end_src

* MediaType to List<Track>: MediaType has a list of Tracks (i.e. "Tracks that use this MediaType")

#+begin_src graphql :url http://localhost:8082/graphql
  query {
    MediaType (input: { limit 1 }) {
      MediaTypeId
      Name
      Tracks (input: { limit 1 }) {
        AlbumId
        Bytes
        Composer
        GenreId
        MediaTypeId
        Milliseconds
        Name
        TrackId
        UnitPrice
      }
    }
  }
#+end_src

* Playlist to List<PlaylistTrack>: Playlist has a list of PlaylistTrack (i.e. "Playlist comprises these PlaylistTracks")

#+begin_src graphql :url http://localhost:8082/graphql
  query {
     Playlist (input: { limit 1 }) {
       PlaylistId
       PlaylistTracks (input: { limit 1 }) {
         PlaylistId
         TrackId
       }
     }
  }
#+end_src

* PlaylistTrack to Playlist: PlaylistTrack has a Playlist (i.e. "Playlist this PlaylistTrack belongs to")

#+begin_src graphql :url http://localhost:8082/graphql
  query {
    PlaylistTrack (input: { limit 1 }) {
      PlaylistId
      TrackId
      Playlist {
        PlaylistId
        Name
      }
    }
  }
#+end_src

* PlaylistTrack to Track: PlaylistTrack has a Track (i.e. "Track this PlaylistTrack corresponds to")

#+begin_src graphql :url http://localhost:8082/graphql
  query {
    PlaylistTrack (input: { limit 1 }) {
      PlaylistId
      TrackId
      Track {
        AlbumId
        Bytes
        Composer
        GenreId
        MediaTypeId
        Milliseconds
        Name
        TrackId
        UnitPrice
      }
    }
  }
#+end_src

* Track to Album: Track belongs to an Album.

#+begin_src graphql :url http://localhost:8082/graphql
  query {
    Track (input: { limit 1 }) {
      AlbumId
      Bytes
      Composer
      GenreId
      MediaTypeId
      Milliseconds
      Name
      TrackId
      UnitPrice
      Album {
        AlbumId
        ArtistId
        Title
      }
    }
  }
#+end_src

* Track to Genre: Track is in a Genre.

#+begin_src graphql :url http://localhost:8082/graphql
  query {
    Track (input: { limit 1 }) {
      AlbumId
      Bytes
      Composer
      GenreId
      MediaTypeId
      Milliseconds
      Name
      TrackId
      UnitPrice
      Genre {
        GenreId
        Name
      }
    }
  }
#+end_src

* Track to List<InvoiceLine>: Track has a list of InvoiceLines (i.e. "InvoiceLines for purchases of this Track")

#+begin_src graphql :url http://localhost:8082/graphql
  query {
    Track (input: { limit 1 }) {
      AlbumId
      Bytes
      Composer
      GenreId
      MediaTypeId
      Milliseconds
      Name
      TrackId
      UnitPrice
      InvoiceLines (input: { limit 1 }) {
        InvoiceId
        Quantity
        InvoiceLineId
        TrackId
        UnitPrice
      }
    }
  }
#+end_src

* Track to List<PlaylistTrack>: Track has a list of PlaylistTrack (i.e. "PlaylistTracks that correspond to this Track")

#+begin_src graphql :url http://localhost:8082/graphql
  query {
    Track (input: { limit 1 }) {
      AlbumId
      Bytes
      Composer
      GenreId
      MediaTypeId
      Milliseconds
      Name
      TrackId
      UnitPrice
      PlaylistTracks (input: { limit 1 }) {
        PlaylistId
        TrackId
      }
    }
  }
#+end_src

* Track to MediaType: Track uses a MediaType.

#+begin_src graphql :url http://localhost:8082/graphql
  query {
    Track (input: { limit 1 }) {
      AlbumId
      Bytes
      Composer
      GenreId
      MediaTypeId
      Milliseconds
      Name
      TrackId
      UnitPrice
      MediaType {
        Name
        MediaTypeId
      }
    }
  }
#+end_src

#+RESULTS:
#+begin_example
{
  "data": {
    "Track": [
      {
        "AlbumId": 1,
        "Bytes": 11170334,
        "Composer": "Angus Young, Malcolm Young, Brian Johnson",
        "GenreId": 1,
        "MediaTypeId": 1,
        "Milliseconds": 343719,
        "Name": "For Those About To Rock (We Salute You)",
        "TrackId": 1,
        "UnitPrice": 0.99,
        "MediaType": {
          "Name": "MPEG audio file",
          "MediaTypeId": 1
        }
      }
    ]
  }
}
#+end_example

* Track to Album to Track again: Track uses an Album with Tracks, but only if a Track's name has a certain value.

#+begin_src graphql :url http://localhost:8082/graphql
{
  Tracks (
    input: {
      limit: 3
    })
  {
    TrackId
    Name
    Album (
      input: {
        limit: 3
      })
    {
      AlbumId
      Tracks (
        input: {
          limit: 3,
          Name: "Balls to the Wall"
        })
      {
        Name
      }
    }
  }
}
#+end_src

#+RESULTS:
#+begin_example
{
  "data": {
    "Tracks": [
      {
        "TrackId": "1",
        "Name": "For Those About To Rock (We Salute You)",
        "Album": {
          "AlbumId": "1",
          "Tracks": []
        }
      },
      {
        "TrackId": "2",
        "Name": "Balls to the Wall",
        "Album": {
          "AlbumId": "2",
          "Tracks": [
            {
              "Name": "Balls to the Wall"
            }
          ]
        }
      },
      {
        "TrackId": "3",
        "Name": "Fast As a Shark",
        "Album": {
          "AlbumId": "3",
          "Tracks": []
        }
      }
    ]
  }
}
#+end_example
